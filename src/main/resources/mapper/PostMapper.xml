<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.louisun.dao.PostDao">

    <resultMap id="PostMap" type="com.louisun.model.Post">
        <id column="post_id" jdbcType="INTEGER" property="postId"/>
        <result column="tag_id" jdbcType="INTEGER" property="tagId"/>
        <result column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="comment_amount" jdbcType="INTEGER" property="commentAmount"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="content" jdbcType="LONGVARCHAR" property="content"/>
        <result column="content_md" jdbcType="LONGVARCHAR" property="contentMd"/>
    </resultMap>

    <resultMap id="PostCommentMap" type="com.louisun.model.Post" extends="PostMap">
        <collection property="commentList"
                    column="{postId=post_id}"
                    select="com.louisun.dao.CommentDao.selectByPostId"
        />
    </resultMap>

    <resultMap id="RankInfoMap" type="com.louisun.dto.PostRankInfo">
        <id column="post_id" jdbcType="INTEGER" property="postId"/>
        <result column="post_title" jdbcType="VARCHAR" property="postTitle"/>
        <result column="user_id" jdbcType="VARCHAR" property="userId"/>
        <result column="cnt" jdbcType="INTEGER" property="commentCount"/>
    </resultMap>

    <select id="getPostRankInfoList" resultMap="RankInfoMap">
        SELECT p.post_id, p.user_id, p.title, u.nickname, COUNT(c.comment_id) as cnt
        FROM post p
                 JOIN user u ON p.user_id = u.user_id
                 LEFT JOIN comment c on p.post_id = c.post_id
        GROUP BY p.post_id
        ORDER BY cnt DESC
    </select>

    <delete id="deleteByPostId" parameterType="java.lang.Integer">
        delete
        from post
        where post_id = #{postId,jdbcType=INTEGER}
    </delete>

    <insert id="insertPost" parameterType="com.louisun.model.Post">
        insert into post (tag_id, user_id,
                          title,
                          content, content_md)
        values (#{tagId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER},
                #{title,jdbcType=VARCHAR},
                #{content,jdbcType=LONGVARCHAR}, #{contentMd,jdbcType=LONGVARCHAR})
    </insert>


    <update id="updateByPostId" parameterType="com.louisun.model.Post">
        update post
        set tag_id         = #{tagId,jdbcType=INTEGER},
            user_id        = #{userId,jdbcType=INTEGER},
            title          = #{title,jdbcType=VARCHAR},
            comment_amount = #{commentAmount,jdbcType=INTEGER},
            create_time    = #{createTime,jdbcType=TIMESTAMP},
            update_time    = #{updateTime,jdbcType=TIMESTAMP},
            content        = #{content,jdbcType=LONGVARCHAR},
            content_md     = #{contentMd,jdbcType=LONGVARCHAR}
        where post_id = #{postId,jdbcType=INTEGER}
    </update>

    <select id="selectByPostId" parameterType="java.lang.Integer" resultMap="PostMap">
        select post_id,
               tag_id,
               user_id,
               title,
               comment_amount,
               create_time,
               update_time,
               content,
               content_md
        from post
        where post_id = #{postId,jdbcType=INTEGER}
    </select>

    <select id="selectByTagId" parameterType="java.lang.Integer" resultMap="PostMap">
        select post_id,
               tag_id,
               user_id,
               title,
               comment_amount,
               create_time,
               update_time,
               content,
               content_md
        from post
        where tag_id = #{tagId,jdbcType=INTEGER}
        order by create_time desc
    </select>


    <select id="selectByUserId" parameterType="java.lang.Integer" resultMap="PostMap">
        select post_id,
               tag_id,
               user_id,
               title,
               comment_amount,
               create_time,
               update_time,
               content,
               content_md
        from post
        where user_id = #{postId,jdbcType=INTEGER}
        order by update_time desc
    </select>

    <select id="selectPostWithCommentsByPostId" parameterType="java.lang.Integer" resultMap="PostCommentMap">
        select post_id,
               tag_id,
               user_id,
               title,
               comment_amount,
               create_time,
               update_time,
               content,
               content_md
        from post
        where post_id = #{postId,jdbcType=INTEGER}
    </select>


    <select id="selectAllPosts" resultMap="PostMap">
        select post_id,
               tag_id,
               user_id,
               title,
               comment_amount,
               create_time,
               update_time,
               content,
               content_md
        from post
        order by create_time desc
    </select>


</mapper>